{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","itemIndex","handleSwipeClick","step","props","images","frameSize","infinity","lastIndex","length","setState","this","itemWidth","animationDuration","prevDisabled","nextDisabled","className","style","width","transition","map","image","index","transform","src","alt","type","disabled","onClick","Component","App","setItemWidth","event","target","value","setFrameSize","setStep","setAnimationDuration","setInfinity","checked","htmlFor","id","min","max","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e1aed00.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinity: boolean;\n}\n\ninterface State {\n  itemIndex: number;\n}\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    itemIndex: 0,\n  };\n\n  handleSwipeClick = (step: number) => () => {\n    const { images, frameSize, infinity } = this.props;\n    let { itemIndex } = this.state;\n\n    itemIndex += step;\n\n    if (infinity) {\n      const totalImages = images.length;\n      const lastIndex = totalImages - frameSize;\n\n      if (itemIndex < 0) {\n        itemIndex = lastIndex;\n      } else if (itemIndex > lastIndex) {\n        itemIndex = 0;\n      }\n    } else {\n      const firstIndex = 0;\n      const lastIndex = images.length - frameSize;\n\n      if (step > 0 && itemIndex > lastIndex) {\n        itemIndex = lastIndex;\n      }\n\n      if (step < 0 && itemIndex < firstIndex) {\n        itemIndex = firstIndex;\n      }\n    }\n\n    this.setState(() => ({\n      itemIndex,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinity,\n    } = this.props;\n\n    const { itemIndex } = this.state;\n    const prevDisabled = (itemIndex <= 0) && !infinity;\n    const nextDisabled = (itemIndex >= images.length - frameSize) && !infinity;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n          transition: `${animationDuration}ms`,\n        }}\n      >\n        <ul className=\"Carousel__list\">\n          {images.map((image, index) => (\n            <li\n              className=\"Carousel_item\"\n              key={image}\n              style={{\n                transform: `translateX(${-itemIndex * itemWidth}px)`,\n                transition: `${animationDuration}ms`,\n              }}\n            >\n              <img src={image} alt={`${index + 1}`} />\n            </li>\n          ))}\n        </ul>\n        <div className=\"Carousel__button\">\n          <button\n            className=\"Carousel__btn\"\n            type=\"button\"\n            disabled={prevDisabled}\n            onClick={this.handleSwipeClick(-step)}\n          >\n            Prev\n          </button>\n          <button\n            type=\"button\"\n            className=\"Carousel__btn\"\n            data-cy=\"next\"\n            disabled={nextDisabled}\n            onClick={this.handleSwipeClick(step)}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinity: boolean;\n}\n\nclass App extends Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinity: false,\n  };\n\n  setItemWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +event.target.value });\n  };\n\n  setFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +event.target.value });\n  };\n\n  setStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +event.target.value });\n  };\n\n  setAnimationDuration = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +event.target.value });\n  };\n\n  setInfinity = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ infinity: event.target.checked });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinity,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel</h1>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinity={infinity}\n        />\n\n        <label\n          htmlFor=\"itemId\"\n          className=\"label\"\n        >\n          Item Widht:\n          <input\n            className=\"App_input\"\n            type=\"number\"\n            id=\"itemId\"\n            value={itemWidth}\n            min={130}\n            max={260}\n            step={10}\n            onChange={this.setItemWidth}\n          />\n        </label>\n\n        <label\n          htmlFor=\"frameId\"\n          className=\"label\"\n        >\n          Frame Size:\n          <input\n            className=\"App_input\"\n            type=\"number\"\n            id=\"frameId\"\n            value={frameSize}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={this.setFrameSize}\n          />\n        </label>\n\n        <label\n          htmlFor=\"stepId\"\n          className=\"label\"\n        >\n          Step:\n          <input\n            className=\"App_input\"\n            type=\"number\"\n            id=\"stepId\"\n            value={step}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={this.setStep}\n          />\n        </label>\n\n        <label\n          htmlFor=\"animId\"\n          className=\"label\"\n        >\n          AnimationDuration:\n          <input\n            className=\"App_input\"\n            type=\"number\"\n            id=\"animId\"\n            value={animationDuration}\n            min={500}\n            max={5000}\n            step={500}\n            onChange={this.setAnimationDuration}\n          />\n        </label>\n\n        <label\n          htmlFor=\"infinityId\"\n          className=\"label\"\n        >\n          Infinity:\n          <input\n            className=\"App_input\"\n            checked={infinity}\n            type=\"checkbox\"\n            id=\"infinityId\"\n            onChange={this.setInfinity}\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}